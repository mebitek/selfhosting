version: "3"
services:

  invidious:
    image: quay.io/invidious/invidious:latest # ARM64/AArch64 devices
    restart: always
    ports:
      - 3001:3000
    environment:
      # Please read the following file for a comprehensive list of all available
      # configuration options and their associated syntax:
      # https://github.com/iv-org/invidious/blob/master/config/config.example.yml
      INVIDIOUS_CONFIG: |
        db:
          dbname: invidious
          user: ${INVIDIOUS_DB_USER}
          password: ${INVIDIOUS_DB_PASSWORD}
          host: invidious-db
          port: 5432
        domain: ${INVIDIOUS_DOMAIN}
        https_only: true 
        check_tables: true
        popular_enabled: false
        registration_enabled: false
        statistics_enabled: true
        external_port: 443        
        hmac_key: ${INVIDIOUS_HMAC_KEY}
    healthcheck:
      test: ['CMD-SHELL', 'wget -nv --tries=1 --spider http://127.0.0.1:3000/api/v1/comments/jNQXAC9IVRw || exit 1']
      interval: 30s
      timeout: 5s
      retries: 2
    logging:
      options:
        max-size: "1G"
        max-file: "4"
    depends_on:
      - invidious-db

  invidious-db:
    image: docker.io/library/postgres:14
    restart: always
    volumes:
      - /home/mebitek/invidious/postgresdata:/var/lib/postgresql/data
      - /home/mebitek/invidious/config/sql:/config/sql
      - /home/mebitek/invidious/docker/init-invidious-db.sh:/docker-entrypoint-initdb.d/init-invidious-db.sh
    environment:
      POSTGRES_DB: invidious
      POSTGRES_USER: ${INVIDIOUS_DB_USER}
      POSTGRES_PASSWORD: ${INVIDIOUS_DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]

  invidious-proxy:
    image: 'caddy:latest'
    restart: always
    volumes:
      - '/home/mebitek/compose/invidious/certs:/root/certs'
      - '/home/mebitek/invidious/caddy-data:/data'
      - '/home/mebitek/invidious/caddy-config:/config'
      - '/home/mebitek/compose/invidious/caddyfile:/etc/caddy/Caddyfile:ro'
    environment:
      INVIDIOUS_DOMAIN: '${INVIDIOUS_DOMAIN}'
    ports:
      - '7443:443'
    depends_on:
      invidious:
        condition: service_healthy
